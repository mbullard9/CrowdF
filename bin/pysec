#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""pysec is a tool to get your notebook back after it was stolen."""


import argparse

import logging
import sys
logging.basicConfig(format='%(asctime)s %(levelname)s %(message)s',
                    level=logging.DEBUG,
                    stream=sys.stdout)

# pysec modules
# Every pysec tool that should be available through
#   pysec TOOL
# has to be added to ``get_parser()`` and to ``main``.
import pysec
from pysec import selfcheck
from pysec import campic
from pysec import network


def get_parser():
    """Return the parser object for this script."""
    parser = argparse.ArgumentParser(description=__doc__,
                                     prog='pysec')
    parser.add_argument('--version',
                        action='version',
                        version=('pysec %s' % str(pysec.__version__)))
    subparsers = parser.add_subparsers(dest='cmd')
    subparsers.add_parser('check',
                          add_help=False,
                          help="Self-check of pysec.")
    subparsers.add_parser('campic',
                          add_help=False,
                          parents=[campic.get_parser()],
                          help=("Take a picture with the internal camera.")
                          )
    subparsers.add_parser('network',
                          add_help=False,
                          parents=[network.get_parser()],
                          help=("Get network information.")
                          )
    return parser


def main(args):
    if args.cmd == 'check':
        selfcheck.main()
    elif args.cmd == 'campic':
        campic.main(args.filename)
    elif args.cmd == 'network':
        network.main()
    else:
        logging.error("Command '%s' is not implemented yet.", args.cmd)

if __name__ == '__main__':
    args = get_parser().parse_args()
    main(args)
